package RazerOfficial.Razer.gg.module.impl.exploit.disabler;

import RazerOfficial.Razer.gg.event.Listener;
import RazerOfficial.Razer.gg.event.annotations.EventLink;
import RazerOfficial.Razer.gg.event.impl.packet.PacketSendEvent;
import RazerOfficial.Razer.gg.module.impl.exploit.Disabler;
import RazerOfficial.Razer.gg.util.interfaces.InstanceAccess;
import RazerOfficial.Razer.gg.util.packet.PacketUtil;
import RazerOfficial.Razer.gg.value.Mode;
import net.minecraft.client.entity.EntityPlayerSP;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.C00PacketKeepAlive;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.network.play.client.C0BPacketEntityAction;
import net.minecraft.network.play.client.C0FPacketConfirmTransaction;
import org.apache.commons.lang3.RandomUtils;

public class LunarDisabler extends Mode<Disabler> {
    public LunarDisabler(String name, Disabler parent) {
        super(name, parent);
    }

    @EventLink
    public final Listener<PacketSendEvent> onPacketSend = event -> {
        Packet<?> packet = event.getPacket();

        if (packet instanceof C0FPacketConfirmTransaction || packet instanceof C00PacketKeepAlive)
            event.setCancelled(true);

        if (packet instanceof C0BPacketEntityAction) {
            final C0BPacketEntityAction c0B = (C0BPacketEntityAction) packet;

            if (c0B.getAction().equals(C0BPacketEntityAction.Action.START_SPRINTING)) {
                if (EntityPlayerSP.serverSprintState) {
                    PacketUtil.sendNoEvent(new C0BPacketEntityAction(InstanceAccess.mc.thePlayer, C0BPacketEntityAction.Action.STOP_SPRINTING));
                    EntityPlayerSP.serverSprintState = false;
                }
                event.setCancelled(true);
            }

            if (c0B.getAction().equals(C0BPacketEntityAction.Action.STOP_SPRINTING)) {
                event.setCancelled(true);
            }
        }

        if (packet instanceof C03PacketPlayer.C04PacketPlayerPosition) {
            final C03PacketPlayer.C04PacketPlayerPosition packetPlayerPosition = (C03PacketPlayer.C04PacketPlayerPosition) packet;
            event.setPacket(new C03PacketPlayer.C06PacketPlayerPosLook(packetPlayerPosition.getX(), packetPlayerPosition.getY(), packetPlayerPosition.getZ(), InstanceAccess.mc.thePlayer.rotationYaw + (InstanceAccess.mc.thePlayer.ticksExisted % 2 == 0 ? RandomUtils.nextFloat(0.05F, 0.1F) : -RandomUtils.nextFloat(0.05F, 0.1F)), InstanceAccess.mc.thePlayer.rotationPitch, packetPlayerPosition.isOnGround()));
        }
    };
}