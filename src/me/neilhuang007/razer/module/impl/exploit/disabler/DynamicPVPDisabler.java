package me.neilhuang007.razer.module.impl.exploit.disabler;

import me.neilhuang007.razer.module.impl.exploit.Disabler;
import me.neilhuang007.razer.newevent.Listener;
import me.neilhuang007.razer.newevent.annotations.EventLink;
import me.neilhuang007.razer.newevent.impl.packet.PacketSendEvent;
import me.neilhuang007.razer.util.packet.PacketUtil;
import me.neilhuang007.razer.value.Mode;
import net.minecraft.client.entity.EntityPlayerSP;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.C00PacketKeepAlive;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.network.play.client.C0BPacketEntityAction;
import net.minecraft.network.play.client.C0FPacketConfirmTransaction;

public class DynamicPVPDisabler extends Mode<Disabler> {
    public DynamicPVPDisabler(String name, Disabler parent) {
        super(name, parent);
    }

    @EventLink
    public final Listener<PacketSendEvent> onPacketSend = event -> {
        Packet<?> packet = event.getPacket();

        if (packet instanceof C03PacketPlayer) {
            if (mc.thePlayer.ticksExisted % 3 == 0)
                event.setCancelled(true);

            final C03PacketPlayer packetPlayer = (C03PacketPlayer) event.getPacket();
            double x = mc.thePlayer.posX, y = mc.thePlayer.posY, z = mc.thePlayer.posZ;

            if (packetPlayer.isMoving()) {
                x = packetPlayer.getPositionX();
                y = packetPlayer.getPositionY();
                z = packetPlayer.getPositionZ();
            }

            if (mc.thePlayer.ticksExisted % 20 == 0)
                PacketUtil.sendNoEvent(new C03PacketPlayer.C04PacketPlayerPosition(x, y, z, packetPlayer.isOnGround()));

            event.setPacket(new C03PacketPlayer.C06PacketPlayerPosLook(x, y, z, mc.thePlayer.rotationYaw, mc.thePlayer.rotationPitch, packetPlayer.isOnGround()));
        }

        if (packet instanceof C0FPacketConfirmTransaction || packet instanceof C00PacketKeepAlive)
            event.setCancelled(true);

        if (packet instanceof C0BPacketEntityAction) {
            final C0BPacketEntityAction c0B = (C0BPacketEntityAction) packet;

            if (c0B.getAction().equals(C0BPacketEntityAction.Action.START_SPRINTING)) {
                if (EntityPlayerSP.serverSprintState) {
                    PacketUtil.sendNoEvent(new C0BPacketEntityAction(mc.thePlayer, C0BPacketEntityAction.Action.STOP_SPRINTING));
                    EntityPlayerSP.serverSprintState = false;
                }

                event.setCancelled(true);
            }

            if (c0B.getAction().equals(C0BPacketEntityAction.Action.STOP_SPRINTING)) {
                event.setCancelled(true);
            }
        }
    };
}