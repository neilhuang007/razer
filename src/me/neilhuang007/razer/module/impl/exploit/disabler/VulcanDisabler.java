package me.neilhuang007.razer.module.impl.exploit.disabler;

import me.neilhuang007.razer.component.impl.player.BadPacketsComponent;
import me.neilhuang007.razer.component.impl.player.BlinkComponent;
import me.neilhuang007.razer.component.impl.player.GUIDetectionComponent;
import me.neilhuang007.razer.module.impl.exploit.Disabler;
import me.neilhuang007.razer.newevent.Listener;
import me.neilhuang007.razer.newevent.annotations.EventLink;
import me.neilhuang007.razer.newevent.impl.motion.PreMotionEvent;
import me.neilhuang007.razer.newevent.impl.packet.PacketSendEvent;
import me.neilhuang007.razer.util.packet.PacketUtil;
import me.neilhuang007.razer.value.Mode;
import me.neilhuang007.razer.value.impl.BooleanValue;
import net.minecraft.network.play.client.C07PacketPlayerDigging;
import net.minecraft.network.play.client.C0BPacketEntityAction;
import net.minecraft.network.play.client.C17PacketCustomPayload;
import net.minecraft.util.BlockPos;
import net.minecraft.util.EnumFacing;

public class VulcanDisabler extends Mode<Disabler> {

    private final BooleanValue sprint = new BooleanValue("Omni-Sprint", this, true);
    private final BooleanValue autoClicker = new BooleanValue("Auto Clicker", this, true);
    private final BooleanValue reach = new BooleanValue("Reach (4.5 Block)", this, true);
    private final BooleanValue movement = new BooleanValue("Strafe and Jump", this, true);
    private final BooleanValue fastUse = new BooleanValue("Fast Use", this, true);
    private final BooleanValue miscellaneous = new BooleanValue("Miscellaneous (Auto-Block, BadPackets)", this, true);
    private final BooleanValue keepSprint = new BooleanValue("Keep Sprint (To disable KeepSprint spoof 1.9)", this, true);

    public VulcanDisabler(String name, Disabler parent) {
        super(name, parent);
    }

    @EventLink()
    public final Listener<PacketSendEvent> onPacketSend = event -> {
        if (miscellaneous.getValue() && event.getPacket() instanceof C17PacketCustomPayload) {
            event.setCancelled(true);
        }
    };

    @EventLink()
    public final Listener<PreMotionEvent> onPreMotionEvent = event -> {
        if (sprint.getValue()) {
            PacketUtil.send(new C0BPacketEntityAction(mc.thePlayer, C0BPacketEntityAction.Action.START_SPRINTING));
            PacketUtil.send(new C0BPacketEntityAction(mc.thePlayer, C0BPacketEntityAction.Action.STOP_SPRINTING));
        }

        if (movement.getValue() && mc.thePlayer.ticksExisted % 5 == 0) {
            PacketUtil.send(new C07PacketPlayerDigging(C07PacketPlayerDigging.Action.STOP_DESTROY_BLOCK, new BlockPos(mc.thePlayer), EnumFacing.UP));
        }

        if (autoClicker.getValue() && !BadPacketsComponent.bad(false, true, true, false, false) && !GUIDetectionComponent.inGUI()) {
            PacketUtil.send(new C07PacketPlayerDigging(C07PacketPlayerDigging.Action.START_DESTROY_BLOCK, new BlockPos(mc.thePlayer), EnumFacing.UP));
        }

        if (fastUse.getValue() && mc.thePlayer.ticksExisted % 7 == 0) {
            PacketUtil.send(new C07PacketPlayerDigging(C07PacketPlayerDigging.Action.DROP_ITEM, BlockPos.ORIGIN, EnumFacing.DOWN));
        }

        if (reach.getValue()) {
            BlinkComponent.blinking = true;
            if (mc.thePlayer.ticksExisted % 2 == 0) BlinkComponent.dispatch();
        }
    };
}