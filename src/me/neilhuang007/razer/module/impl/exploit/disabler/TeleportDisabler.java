package me.neilhuang007.razer.module.impl.exploit.disabler;


import me.neilhuang007.razer.module.impl.exploit.Disabler;
import me.neilhuang007.razer.newevent.Listener;
import me.neilhuang007.razer.newevent.annotations.EventLink;
import me.neilhuang007.razer.newevent.impl.motion.PreMotionEvent;
import me.neilhuang007.razer.util.math.MathUtil;
import me.neilhuang007.razer.util.packet.PacketUtil;
import me.neilhuang007.razer.util.player.MoveUtil;
import me.neilhuang007.razer.value.Mode;
import me.neilhuang007.razer.value.impl.BooleanValue;
import me.neilhuang007.razer.value.impl.ModeValue;
import me.neilhuang007.razer.value.impl.NumberValue;
import me.neilhuang007.razer.value.impl.SubMode;
import net.minecraft.network.play.client.C03PacketPlayer;

public class TeleportDisabler extends Mode<Disabler> {

    private final ModeValue direction = new ModeValue("Direction", this)
            .add(new SubMode("Up"))
            .add(new SubMode("Down"))
            .add(new SubMode("Horizontal"))
            .setDefault("Up");

    private final NumberValue delay = new NumberValue("Delay", this, 20, 2, 100, 1);
    private final BooleanValue mathGround = new BooleanValue("Math Ground", this, false);
    private final BooleanValue groundState = new BooleanValue("Ground State", this, false);

    public TeleportDisabler(String name, Disabler parent) {
        super(name, parent);
    }

    @EventLink()
    public final Listener<PreMotionEvent> onPreMotionEvent = event -> {

        if (mc.thePlayer.ticksExisted % delay.getValue().intValue() == 0) {
            double x = event.getPosX();
            double y = event.getPosY();
            double z = event.getPosZ();

            switch (direction.getValue().getName()) {
                case "Up": {
                    y += MathUtil.getRandom(1024, 2048);
                    break;
                }

                case "Down": {
                    y -= MathUtil.getRandom(1024, 2048);
                    break;
                }

                case "Horizontal": {
                    x += MathUtil.getRandom(1024, 2048);
                    z -= MathUtil.getRandom(1024, 2048);
                    break;
                }
            }

            if (mathGround.getValue()) {
                y = MoveUtil.roundToGround(y);
            }

            PacketUtil.send(new C03PacketPlayer.C04PacketPlayerPosition(x, y, z, groundState.getValue()));
        }
    };
}